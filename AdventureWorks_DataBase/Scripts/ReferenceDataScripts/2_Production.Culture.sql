USE [AdventureWorks_DataBase]

--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

MERGE INTO [Production].[Culture] AS [Target]
USING (VALUES
  (N'',N'Invariant Language (Invariant Country)','2008-04-30T00:00:00')
 ,(N'ar',N'Arabic','2008-04-30T00:00:00')
 ,(N'en',N'English','2008-04-30T00:00:00')
 ,(N'es',N'Spanish','2008-04-30T00:00:00')
 ,(N'fr',N'French','2008-04-30T00:00:00')
 ,(N'he',N'Hebrew','2008-04-30T00:00:00')
 ,(N'th',N'Thai','2008-04-30T00:00:00')
 ,(N'zh-cht',N'Chinese','2008-04-30T00:00:00')
) AS [Source] ([CultureID],[Name],[ModifiedDate])
ON ([Target].[CultureID] = [Source].[CultureID])
WHEN MATCHED AND (
	NULLIF([Source].[Name], [Target].[Name]) IS NOT NULL OR NULLIF([Target].[Name], [Source].[Name]) IS NOT NULL OR 
	NULLIF([Source].[ModifiedDate], [Target].[ModifiedDate]) IS NOT NULL OR NULLIF([Target].[ModifiedDate], [Source].[ModifiedDate]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[Name] = [Source].[Name], 
  [Target].[ModifiedDate] = [Source].[ModifiedDate]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([CultureID],[Name],[ModifiedDate])
 VALUES([Source].[CultureID],[Source].[Name],[Source].[ModifiedDate])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [Production].[Culture]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[Production].[Culture] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END


SET NOCOUNT OFF