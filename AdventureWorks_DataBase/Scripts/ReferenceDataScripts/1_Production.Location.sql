
USE [AdventureWorks_DataBase]


--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [Production].[Location] ON

MERGE INTO [Production].[Location] AS [Target]
USING (VALUES
  (1,N'Tool Crib',0.0000,0.00,'2008-04-30T00:00:00')
 ,(2,N'Sheet Metal Racks',0.0000,0.00,'2008-04-30T00:00:00')
 ,(3,N'Paint Shop',0.0000,0.00,'2008-04-30T00:00:00')
 ,(4,N'Paint Storage',0.0000,0.00,'2008-04-30T00:00:00')
 ,(5,N'Metal Storage',0.0000,0.00,'2008-04-30T00:00:00')
 ,(6,N'Miscellaneous Storage',0.0000,0.00,'2008-04-30T00:00:00')
 ,(7,N'Finished Goods Storage',0.0000,0.00,'2008-04-30T00:00:00')
 ,(10,N'Frame Forming',22.5000,96.00,'2008-04-30T00:00:00')
 ,(20,N'Frame Welding',25.0000,108.00,'2008-04-30T00:00:00')
 ,(30,N'Debur and Polish',14.5000,120.00,'2008-04-30T00:00:00')
 ,(40,N'Paint',15.7500,120.00,'2008-04-30T00:00:00')
 ,(45,N'Specialized Paint',18.0000,80.00,'2008-04-30T00:00:00')
 ,(50,N'Subassembly',12.2500,120.00,'2008-04-30T00:00:00')
 ,(60,N'Final Assembly',12.2500,120.00,'2008-04-30T00:00:00')
) AS [Source] ([LocationID],[Name],[CostRate],[Availability],[ModifiedDate])
ON ([Target].[LocationID] = [Source].[LocationID])
WHEN MATCHED AND (
	NULLIF([Source].[Name], [Target].[Name]) IS NOT NULL OR NULLIF([Target].[Name], [Source].[Name]) IS NOT NULL OR 
	NULLIF([Source].[CostRate], [Target].[CostRate]) IS NOT NULL OR NULLIF([Target].[CostRate], [Source].[CostRate]) IS NOT NULL OR 
	NULLIF([Source].[Availability], [Target].[Availability]) IS NOT NULL OR NULLIF([Target].[Availability], [Source].[Availability]) IS NOT NULL OR 
	NULLIF([Source].[ModifiedDate], [Target].[ModifiedDate]) IS NOT NULL OR NULLIF([Target].[ModifiedDate], [Source].[ModifiedDate]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[Name] = [Source].[Name], 
  [Target].[CostRate] = [Source].[CostRate], 
  [Target].[Availability] = [Source].[Availability], 
  [Target].[ModifiedDate] = [Source].[ModifiedDate]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([LocationID],[Name],[CostRate],[Availability],[ModifiedDate])
 VALUES([Source].[LocationID],[Source].[Name],[Source].[CostRate],[Source].[Availability],[Source].[ModifiedDate])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [Production].[Location]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[Production].[Location] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END




SET IDENTITY_INSERT [Production].[Location] OFF
SET NOCOUNT OFF
