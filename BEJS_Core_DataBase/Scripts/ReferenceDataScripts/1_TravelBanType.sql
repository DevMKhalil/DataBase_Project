
--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

MERGE INTO [TrvBan].[TravelBanRequestStatus] AS [Target]
USING (VALUES
  (1,N'Waiting for Submission',N'في انتظار تقديم الطلب')
 ,(2,N'Partially Submitted',N'تم التقديم جزئيا')
 ,(3,N'Fully Submitted',N'تم تقديم الطلب')
) AS [Source] ([Code],[Name],[NameAr])
ON ([Target].[Code] = [Source].[Code])
WHEN MATCHED AND (
	NULLIF([Source].[Name], [Target].[Name]) IS NOT NULL OR NULLIF([Target].[Name], [Source].[Name]) IS NOT NULL OR 
	NULLIF([Source].[NameAr], [Target].[NameAr]) IS NOT NULL OR NULLIF([Target].[NameAr], [Source].[NameAr]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[Name] = [Source].[Name], 
  [Target].[NameAr] = [Source].[NameAr]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([Code],[Name],[NameAr])
 VALUES([Source].[Code],[Source].[Name],[Source].[NameAr])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [TrvBan].[TravelBanRequestStatus]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[TrvBan].[TravelBanRequestStatus] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END


SET NOCOUNT OFF
